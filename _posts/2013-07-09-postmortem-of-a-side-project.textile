---
layout: post
title: Postmortem of a side-project
enki_id: 31
categories: filelike, business, bootstrapping
---
Early July, I sent an email to all users of Filelike (my "SaaS":http://en.wikipedia.org/wiki/Software_as_a_service application for selling digital files) informing them that as of June 30 2013, I would be discontinuing support and shutting down the site.

I have mixed feelings as I write this post, I developed Filelike in my spare time and it was the first solo project that I have built and launched. For that alone, I was and am quite proud of it. But while it got some traction, the site never made it to financial viability. Simply put: I was investing more into it than I was getting out of it and the bell has now tolled for "Filelike and my much loved squid mascot":http://web.archive.org/web/20130414132713/https://filelike.com/.<!-- :truncate: -->

I could be quite negative about this turn of events. I could view this situation as a waste of precious time and effort, a mistake. Looking back on some of the stressed times I've had developing and then attempting to promote Filelike, a part of me does feel this way. But a larger part of me agrees with the saying:

bq. It’s only a mistake if you don’t learn something.

h3. Progressing a side-project is hard

I have not had the luxury of working on Filelike full time. I have a day job and as fate would have it, almost to the week that I launched Filelike, my day job became raucously busy and this curtailed my efforts to maintain and promote Filelike.

I don't feel that this is a particularly insightful learning on the face of it. It's "well known in the startup culture":http://www.paulgraham.com/die.html that if you need to hold down a day job and therefore your product is a side-project, then that's already taking something difficult and making it more so. I guess it's one thing to hear or read this and it's another to have lived it, some things one needs to have personally experienced before it really sinks in.

I think it comes down to prospective product size and fit. I sincerely doubt that it would realistically be possible to create a Google/Facebook/Twitter without moving to spending 100% of your professional time on developing such a project and courting outside investment with great speed. However, if one is not aiming for the archetypal, exponentially growing startup path (which I was not) and the idea of a slower growing 'lifestyle business' appeals (as it did and still does to me) then I don't think running a product as a side-project is an automatic death knell.

Some products just cannot be be run as a side-project. There was an earlier prospective online product that I was once involved in which would have necessitated a large amount of individual client contact with business owners within a traditional long established industry. Such an idea really required that it not be treated as an after hours side-project, but none of us thinking about the idea could commit to anything but a side-project at the time. This realisation was in large part what stopped me from moving forward with that idea.

I' don't mean to imply that one shouldn't try to develop an idea as a side-project, indeed I still have a couple of ideas myself that would probably fit this description. But I believe that especially with a side-project, one needs to be very honest with themselves about what the idea is and whether it fits the side-project mould.

h3. Morale

It's hard to maintain faith in something when you have a relatively small user base providing little feedback. I'd heard the advice that if you build something that gets even a small number of users excited, then this can be a way of boosting morale and lighting the way forward. Respond to user feedback and iterate quickly, that was the plan. But "No battle plan survives contact with the enemy":http://en.wikipedia.org/wiki/Helmuth_von_Moltke_the_Elder#Moltke.27s_Theory_of_War so it is said, and Filelike was not an exception. The hard truth as it appears to me is that Filelike simply did not get users _excited enough_, neither to sustain the site, nor to sustain my morale.

I had envisioned that I would document each step of my journey with Filelike, and it would provide much fodder for my writings. But the reality was that just keeping up with maintaing/developing the site, user support when it was required, and my day job sapped most of my time and enthusiasm away to the point where this blog post now sits atop my post that launched Filelike into the world. On a side tangent, "I don't think I'll be doing any more launches per se":http://philosophically.com/dont-launch-your-product.

Having spoken to some friends (of a similar "maker's":http://www.paulgraham.com/makersschedule.html inclination to my own) whom have also launched technology based products with varying degrees of success, I am coming to the belief that perhaps - to paraphrase William Faulkner - we need to kill our darlings more quickly. I personally don't give up very easily, and I have observed this trait in most people I know that have had the focus to build and launch a product. This is a valuable trait, but I have also observed that this trait can lead to stubbornness. When we should have been recognising a failure and learning from it for the next adventure, or switching to another facet of an existing idea (i.e. 'pivoting'), we were still caught up in that original battle plan.

I'm not sure if I can really put a hard timeframe on when it should start to become apparent that an idea has run its course and will not be gaining traction as was hoped, I could say six months or twelve months, and this feels about right for me and the projects that I've been involved in, but this also feels very subjective. The only generally applicable advice I'd be happy to stand behind is: absolutely keep working on that idea or product, but be extremely honest with yourself and listen intently to feedback from trusted sources.

h3. Networking and promotion is key

Rarely, but sometimes all the stars align just right and a product is born that is so compelling, so amazing and paradigm shifting, yet still accessible/understandable enough that it just about sells its self. For all the other times, there's networking and promotion. It was only after I got to the point of launching Filelike that it really hit me just how important networking is. I knew this intellectually of course, and I had relevant plans in place (or at least thought I did) but again this was a learning that I needed to live to fully appreciate. I had some early success both pre and post launch to garner some modest interest in Filelike. But not surprisingly I quickly found this issue to be of the perennial 'chicken or the egg' class of problem. It truly is hard to promote your service and make it stick when one is more or less an unknown, toiling away in obscurity.

It seems that the exposure that one might get by being involved in "Y Combinator":http://ycombinator.com/ or other such startup incubators really is something that's hard to put a dollar value on. I would go so far as to say that good avenues into networking and promotion are often more important than the product its self, assuming the product is at least competently constructed. Case in point: there is a relatively well known company of which I have some amount of insight into, whose business is primarily selling SaaS applications and equivalent on-premise versions of this same software into mainly enterprise sized organisations. This company's products are certainly competent but hardly ground breaking. I would describe them as often needlessly complex, providing a sometimes disappointing user experience and they are especially fragile when it comes to upgrading on-premise. Yet they are quite wildly successful. A large reason for this success was that one of the founders of this company had ready access - through a family member - to an impressive, pre-existing network of the kind of people who make decisions about what software their large enterprise business will be purchasing. Networks made this company the success that it is. All they had to do was ensure that their software didn't fall over in a screaming heap during use. I say 'All they had to do' but I don't wish to completely invalidate what was no doubt still a hard slog. None the less, I do believe that this company could not have become as successful as it is without the pre-existing network they had access to.

As developers, we like to think that the success of a technology product depends mostly on the quality of the code. Dude, I hand-crafted my own web server using S-expressions, I've done everything the Internet says! Even the stuff that contradicts the other stuff! How can the users _not_ like this app? Well, the users don't give a single flying fuck about the elegance and quality of your code unless it makes their life easier, I don't think I can state this strongly enough because I must have read some variation of this advice a hundred times or more, but still I'm fairly sure I too often worried about the elegance of my codebase and how much test coverage it had to the detriment of all those messy things I probably should have been doing more of... like networking and promotion. In the real world, in many cases I have witnessed (no doubt you can think of some examples yourself) an average product with a great network behind it will usually trump the objectively better product with a poorer network connected to it.

There's a balance to be struck here obviously, but the rule of thumb I'm planning on using moving forward will be biased towards doing more of those messy things involving contact with other humans even if this means living with a little "technical debt":http://en.wikipedia.org/wiki/Technical_debt for longer than I would previously have considered.

Aside from getting one's self into one of the afore mentioned startup incubators or otherwise finding backing from an investor of some other kind, I don't think I can confidently point to any other means by which such valuable networks can be created with such speed. However, I do think there is worth - albeit perhaps of the slower burning kind - in putting yourself out there with a blog and/or a product, regardless of what scale it is, going to relevant meet ups if you can make it (something I am guilty of not doing enough of), contributing to open source projects that may be of interest, and otherwise engaging with the world.

I also suspect we often underestimate the value of our existing social and professional networks. In thinking about possibilities for new ventures, I am more consciously focussing on ideas that could be useful to the contacts that I already have in the professional circles that I already move within. As opposed to thinking up ideas that may have value to types of people and groups that I know exist, but that I do not personally have a strong connection with. I'm thinking of this as an extension of the 'scratch your own itch' principle, 'scratch the itch of prospective customer groups that you already have contact with'.

Just jumping in and giving something a go can be great for developing networks. During my little adventure with Filelike, I've met a number of great people that I would not have met otherwise and while knowing these people has ultimately not contributed to the survival of Filelike, I now count them as valued members of my social/professional network.

h3. The future

So what now? Well, I know that I still have a desire to create and that I've got a few of ideas that I may like to develop further. Lately, I've mainly been focussing on bringing new tools and new view points into my professional arsenal. But I feel the time is near for this largely inward focussed cycle to come to an end.

And where does the newborn go from here? The net is vast and infinite.
